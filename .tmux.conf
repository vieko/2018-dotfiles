# free prefix
unbind C-b

# better prefix
set -g prefix C-a

# resolve bash / vim mapping
bind a send-prefix

# use vi keys
set -gw mode-keys vi

# no normal mode required to traverse command history
bind-key -T edit-mode-vi Up   send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
set -g history-limit 10000

# use os clipboard.
set-option -g default-command "reattach-to-user-namespace -l bash"

# set delay between prefix and command
set -s escape-time 10

# set base index for windows
set -g base-index 1

# set base index for panes
setw -g pane-base-index 1

# reload configuration file
bind r source-file ~/.tmux.conf \; display "reloaded ~/.tmux.conf"

# split panel keys
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

#smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# panel movement keys
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

# window cycling keys
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+

# resize pane keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# use `<prefix> [` to enter copy-mode
bind [ copy-mode
unbind c-[
bind ] paste-buffer

# use 'v' tp begin selection in copy mode, similar to entering visual mode in vim
bind-key -T copy-mode-vi v send-keys -X begin-selection

# use 'y' to yank selected text to system clipboard in copy mode, similar to yanking in vim
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

# update default binding of 'Enter' to also copy-pipe
#unbind-key -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# status bar
set -g status-interval 1
setw -g monitor-activity on
set -g visual-activity on
set -g set-titles on
set -g set-titles-string '#S'

# define mouse support (or lack of it)
set -g mouse off

# set default terminal mode
set -g default-terminal "xterm-256color"

# load tmuxline configuration
# source-file .tmuxline.conf
